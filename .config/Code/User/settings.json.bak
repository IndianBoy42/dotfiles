{
    "workbench.colorTheme": "Dark+ Material",
    "C_Cpp.updateChannel": "Insiders",
    "cmake.configureOnOpen": false,
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.fontLigatures": true,
    // "editor.fontFamily": "'Caskaydia Cove','",
    "editor.fontFamily": "FiraCode NF, FiraCode Nerd Font",
    "editor.fontSize": 12,
    // "terminal.integrated.fontFamily": "'Cascadia Code PL'",
    // "terminal.integrated.fontFamily": "'CaskaydiaCove Nerd Font'",
    // "terminal.integrated.fontSize": 14,
    "terminal.integrated.fontFamily": "FiraMono NF, FiraCode Nerd Font Mono",
    "terminal.integrated.fontSize": 14,
    "markdown.preview.fontFamily": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
    "markdown.preview.fontSize": 18,
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "python.jediEnabled": false,
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.shell.windows": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
    "terminal.integrated.shell.linux": "/usr/bin/fish",
    "julia.enableTelemetry": true,
    "todo-tree.highlights.enabled": true,
    "files.associations": {
        "*.h": "c",
        "*.cu": "cpp"
    },
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, UseTab: Always, IndentWidth: 4, TabWidth: 4, ColumnLimit: 120}",
    "todo-tree.tree.showScanModeButton": false,
    "editor.accessibilitySupport": "off",
    "python.languageServer": "Pylance",
    "remote.SSH.remotePlatform": {
        "143.89.244.182": "linux",
        "10.89.243.217": "linux",
        "10.89.120.244": "linux",
        "10.89.87.208": "linux",
        "10.89.126.64": "linux",
        "192.168.31.209": "linux",
        "10.89.176.158": "linux",
        "143.89.130.61": "linux",
        "143.89.130.147": "linux",
        "192.168.137.123": "linux",
        "192.168.39.129": "linux",
        "192.168.39.130": "linux",
        "localhost": "linux",
        "192.168.116.129": "linux",
        "csl2wk20.cse.ust.hk": "linux",
        "csl2wk30.cse.ust.hk": "linux",
        "192.168.1.117": "linux"
    },
    "[rust]": {
        "editor.defaultFormatter": "statiolake.vscode-rustfmt"
    },
    "[ispc]": {
        "editor.defaultFormatter": "ms-vscode.cpptools"
    },
    "files.exclude": {
        "data/ccpd_lpr_**/**": true
    },
    "files.watcherExclude": {
        "data/ccpd_lpr_**/**": true
    },
    "python.insidersChannel": "off",
    "codespaces.accountProvider": "GitHub",
    "latex-workshop.latex.recipes": [
        {
            "name": "latexmk ðŸ”ƒ",
            "tools": ["latexmk"]
        },
        {
            "name": "latexmk (lualatex)",
            "tools": ["lualatexmk"]
        },
        {
            "name": "latexmk (latexmkrc)",
            "tools": ["latexmk_rconly"]
        },
        {
            "name": "pdflatex âžž bibtex âžž pdflatexâ€ŠÃ—â€Š2",
            "tools": ["pdflatex", "bibtex", "pdflatex", "pdflatex"]
        },
        {
            "name": "Compile Rnw files",
            "tools": ["rnw2tex", "latexmk"]
        },
        {
            "name": "Compile Jnw files",
            "tools": ["jnw2tex", "latexmk"]
        }
    ],
    "latex-workshop.latex.autoBuild.run": "onSave",
    "latex-workshop.chktex.run": "onType",
    "latex-workshop.view.pdf.viewer": "tab",
    "jupyter.sendSelectionToInteractiveWindow": true,
    "jupyter.askForKernelRestart": false,
    "editor.formatOnSaveMode": "modifications",
    "python.pythonPath": "C:\\Users\\amedhi\\Anaconda3\\python.exe",
    "grammarly.userWords": ["eatigo"],
    "code-runner.runInTerminal": true,
    "code-runner.saveFileBeforeRun": true,
    "editor.quickSuggestions": true,
    "auto-correct.dictionary": [
        {
            "languages": ["*"],
            "words": {
                "hte": "the"
            },
            "useLargeList": false
        },
        {
            "languages": ["rust", "Rust"],
            "words": {
                "itc": "iter().copied()",
                "hte": "the"
            }
        },
        {
            "languages": [
                "javascript",
                "javascriptreact",
                "typescript",
                "typescriptreact"
            ],
            "words": {
                "cosnt": "const",
                "functoin": "function"
            }
        }
    ],
    "rust-analyzer.updates.askBeforeDownload": false,
    "rust-analyzer.assist.importMergeBehaviour": "last",
    "vim.easymotion": true,
    "vim.surround": true,
    "vim.sneak": true,
    "vim.leader": "\\",
    // "vim.leader": " ",
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": ["i", "z", "w"],
            "commands": ["extension.subword-select"]
        },
        {
            "before": ["z", "c"],
            "after": ["\"", "_", "c"]
        },
        {
            "before": ["z", "C"],
            "after": ["\"", "_", "C"]
        },
        {
            "before": ["z", "d"],
            "after": ["\"", "_", "d"]
        },
        {
            "before": ["z", "D"],
            "after": ["\"", "_", "D"]
        },
        {
            "before": ["X"],
            "after": ["\"", "_", "X"]
        },
        {
            "before": ["x"],
            "after": ["\"", "_", "x"]
        },
        {
            "before": ["z", "X"],
            "after": ["X"]
        },
        {
            "before": ["z", "x"],
            "after": ["x"]
        },
        {
            "before": ["H"],
            "after": ["^"]
        },
        {
            "before": ["L"],
            "after": ["g", "_"]
        },
        {
            "before": ["0"],
            "after": ["^"]
        },
        {
            "before": ["9"],
            "after": ["g", "_"]
        },
        {
            "before": ["g", "s", "b"],
            "commands": ["bracket-jumper.ascendLeft"]
        },
        {
            "before": ["z", "s", "b"],
            "commands": ["bracket-jumper.ascendRight"]
        },
        {
            "before": ["g", "Y"],
            "commands": ["intelli-refactor.refactor"]
        },
        {
            "before": ["g", "y"],
            "commands": ["intelli-refactor.quickFix"]
        },
        {
            "before": ["s"],
            "after": ["g", "b"]
        },
        {
            "before": ["."],
            "after": []
        },
        {
            "before": ["<space>"],
            "commands": ["vspacecode.space"]
        },
        {
            "before": [","],
            "commands": [
                "vspacecode.space",
                {
                    "command": "whichkey.triggerKey",
                    "args": "m"
                }
            ]
        }
    ],
    "vim.insertModeKeyBindingsNonRecursive": [
        // {
        //     "before": ["<Esc>"],
        //     "commands": ["workbench.action.files.save", "extension.vim_escape"]
        // }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["."],
            "after": []
        },
        {
            "before": ["H"],
            "after": ["^"]
        },
        {
            "before": ["L"],
            "after": ["g", "_"]
        },
        {
            "before": ["0"],
            "after": ["^"]
        },
        {
            "before": ["9"],
            "after": ["g", "_"]
        },
        {
            "before": ["q"],
            "after": ["leader", "leader", "leader", "b", "d", "w"]
        },
        {
            "before": ["Q"],
            "after": ["leader", "leader", "leader", "b", "d", "j", "k"]
        },
        {
            "before": ["S"],
            "after": ["leader", "leader", "leader", "j"]
        },
        {
            "before": ["s"],
            "after": ["leader", "leader", "/"]
        },
        {
            "before": ["z", "i"],
            "after": ["b", "i"]
        },
        {
            "before": ["z", "a"],
            "after": ["e", "a"]
        },
        {
            "before": ["g", "Y"],
            "commands": ["intelli-refactor.refactor"]
        },
        {
            "before": ["g", "y"],
            "commands": ["intelli-refactor.quickFix"]
        },
        {
            "before": ["g", "u"],
            "commands": ["editor.action.marker.next"]
        },
        {
            "before": ["g", "U"],
            "commands": ["editor.action.marker.prev"]
        },
        {
            "before": ["g", "i"],
            "commands": ["editor.action.goToReferences"]
        },
        {
            "before": ["g", "p", "d"],
            "commands": ["editor.action.peekDefinition"]
        },
        {
            "before": ["g", "p", "D"],
            "commands": ["editor.action.peekDeclaration"]
        },
        {
            "before": ["g", "P", "D"],
            "commands": ["editor.action.openDeclarationToTheSide"]
        },
        {
            "before": ["g", "P", "d"],
            "commands": ["editor.action.revealDefinitionAside"]
        },
        {
            "before": ["g", "D"],
            "commands": ["editor.action.revealDeclaration"]
        },
        {
            "before": ["g", "s", "b"],
            "commands": ["bracket-jumper.ascendLeft"]
        },
        {
            "before": ["z", "s", "b"],
            "commands": ["bracket-jumper.ascendRight"]
        },
        {
            "before": ["g", "b"],
            "after": ["<C-o>"]
        },
        {
            "before": ["g", "r"],
            "commands": ["workbench.action.tasks.build"]
        },
        {
            "before": ["g", "E"],
            "commands": ["workbench.action.tasks.reRunTask"]
        },
        {
            "before": ["g", "e"],
            "commands": ["workbench.action.tasks.runTask"]
        },
        {
            "before": ["g", " "],
            "commands": ["workbench.action.showCommands"]
        },
        {
            "before": ["g", "o"],
            "commands": ["workbench.action.quickOpen"]
        },
        {
            "before": ["g", "O"],
            "commands": ["workbench.action.focusNextGroup"]
        },
        {
            "before": ["g", ":"],
            "commands": ["workbench.action.gotoLine"]
        },
        {
            "before": ["g", ";"],
            "commands": ["workbench.action.gotoSymbol"]
        },
        {
            "before": ["g", "f"],
            "commands": [
                "editor.action.formatDocument",
                "workbench.action.files.save"
            ]
        },
        {
            "before": ["g", "n"],
            "commands": ["workbench.action.files.newUntitledFile"]
        },
        {
            "before": ["g", "w"],
            "commands": ["workbench.action.closeActiveEditor"]
        },
        {
            "before": ["Z", "Z"],
            "commands": ["workbench.action.files.save"]
        },
        {
            "before": ["z", "o"],
            "after": ["o", "<Esc>"]
        },
        {
            "before": ["z", "O"],
            "after": ["O", "<Esc>"]
        },
        {
            "before": ["z", "n"],
            "after": ["*"]
        },
        {
            "before": ["Y"],
            "after": ["y", "$"]
        },
        {
            "before": ["z", "f"],
            "commands": ["vim-search-and-replace.start"]
        },
        {
            "before": ["z", "c"],
            "after": ["\"", "_", "c"]
        },
        {
            "before": ["z", "C"],
            "after": ["\"", "_", "C"]
        },
        {
            "before": ["z", "d"],
            "after": ["\"", "_", "d"]
        },
        {
            "before": ["z", "D"],
            "after": ["\"", "_", "D"]
        },
        {
            "before": ["X"],
            "after": ["\"", "_", "X"]
        },
        {
            "before": ["x"],
            "after": ["\"", "_", "x"]
        },
        {
            "before": ["z", "X"],
            "after": ["X"]
        },
        {
            "before": ["z", "x"],
            "after": ["x"]
        },
        {
            "before": ["<C-J>"],
            "commands": ["editor.action.insertCursorBelow"]
        },
        {
            "before": ["<C-K>"],
            "commands": ["editor.action.insertCursorAbove"]
        },
        {
            "before": ["<space>"],
            "commands": ["vspacecode.space"]
        },
        {
            "before": [","],
            "commands": [
                "vspacecode.space",
                {
                    "command": "whichkey.triggerKey",
                    "args": "m"
                }
            ]
        }
    ],
    "vim.handleKeys": {
        "<C-c>": false,
        "<C-g>": false,
        "<C-f>": false,
        "<C-r>": false
    },
    "workbench.colorCustomizations": {
        "editor.selectionBackground": "#ff000050",
        // "editor.selectionBackground": "#ffffff70",
        "editor.foreground": "#c7c7c7"
        // "editor.selectionHighlightBackground": "#ffffff60"
    },
    "vim.camelCaseMotion.enable": true,
    "vim.incsearch": true,
    "vim.hlsearch": true,
    "vim.visualstar": true,
    "vim.highlightedyank.enable": true,
    "vim.highlightedyank.duration": 1000,
    "workbench.editorAssociations": [
        {
            "viewType": "jupyter.notebook.ipynb",
            "filenamePattern": "*.ipynb"
        }
    ],
    "macros": {
        "saveAndExitVimInsertMode": [
            "workbench.action.files.save",
            "extension.vim_escape"
        ]
    },
    "editor.lineNumbers": "relative",
    "search.showLineNumbers": true,
    "diffEditor.renderSideBySide": true,
    "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
    "terminal.integrated.commandsToSkipShell": ["language-julia.interrupt"],
    "settingsSync.keybindingsPerPlatform": false,
    "git.autofetch": true,
    "ispc.compilerPath": "~/bin/ispc.exe",
    "ispc.compilerTarget": "avx2",
    "ispc.compilerTargetOS": "linux",
    "liveServer.settings.donotShowInfoMsg": true,
    "prettier.arrowParens": "avoid",
    "prettier.tabWidth": 4,
    "tabnine.experimentalAutoImports": true,
    "files.autoSave": "afterDelay",
    "remote.SSH.useLocalServer": false,
    "editor.wordWrap": "on",
    "settingsSync.ignoredSettings": [
        "-C_Cpp.clang_format_style",
        "-C_Cpp.clang_format_fallbackStyle",
        "files.autoSaveDelay",
        "files.autoSave"
    ],
    "mesonbuild.configureOnOpen": false,
    "latex-workshop.view.pdf.external.synctex.command": "zathura",
    "latex-workshop.view.pdf.external.viewer.command": "zathura",
    "matlab-formatter.separateBlocks": false,
    "latex-utilities.liveReformat.enabled": true,
    "window.menuBarVisibility": "toggle",
    "vim.useSystemClipboard": true,
    "editor.cursorSurroundingLines": 15,
    "todo-tree.general.tags": [
        "BUG",
        "HACK",
        "FIXME",
        "TODO",
        "XXX",
        "[ ]",
        "[x]",
        "unimplemented!",
        "todo!"
    ],
    "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
    "[markdown]": {
        "editor.defaultFormatter": "yzhang.markdown-all-in-one"
    },
    "editor.glyphMargin": false,
    "editor.folding": true,
    "[cpp]": {
        "editor.defaultFormatter": "ms-vscode.cpptools"
    },
    "workbench.panel.defaultLocation": "right",
    "whichkey.sortOrder": "nonNumberFirst",
    "vspacecode.bindingOverrides": [
        {
            "keys": "x.n",
            "name": "Align Cursor/Selections",
            "type": "command",
            "command": "yo1dog.cursor-align.alignCursors"
        },
        {
            "keys": "l.j",
            "name": "Move Panel Down",
            "type": "command",
            "command": "workbench.action.positionPanelDown"
        },
        {
            "keys": "l.l",
            "name": "Move Panel Right",
            "type": "command",
            "command": "workbench.action.positionPanelRight"
        },
        {
            "keys": "c.m",
            "name": "CMake Build",
            "type": "command",
            "command": "cmake.build"
        },
        {
            "keys": "c.t",
            "name": "CMake",
            "type": "command",
            "command": "cmake.buildWithTarget"
        },
        {
            "keys": "c.r",
            "name": "Run Task",
            "type": "command",
            "command": "workbench.action.tasks.runTask"
        },
        {
            "keys": "c.R",
            "name": "Rerun Task",
            "type": "command",
            "command": "workbench.action.tasks.reRunTask"
        },
        {
            "keys": "b.F",
            "name": "Format and save buffer",
            "type": "commands",
            "commands": [
                "editor.action.formatDocument",
                "workbench.action.files.save"
            ]
        },
        {
            "keys": "c.F",
            "name": "Format and save buffer",
            "type": "commands",
            "commands": [
                "editor.action.formatDocument",
                "workbench.action.files.save"
            ]
        },
        {
            "keys": "b.f",
            "name": "Format buffer",
            "type": "command",
            "command": "editor.action.formatDocument"
        },
        {
            "keys": "c.f",
            "name": "Format buffer",
            "type": "command",
            "command": "editor.action.formatDocument"
        },
        {
            "keys": "c.j",
            "name": "Run Jupyter Cell",
            "type": "command",
            "command": "jupyter.runcurrentcell"
        },
        {
            "keys": "c.J",
            "name": "Run Cell and Below",
            "type": "command",
            "command": "jupyter.runcurrentcellandallbelow.palette"
        },
        {
            "keys": "j./",
            "name": "Jump to search",
            "type": "command",
            "command": "vim.remap",
            "args": {
                "after": ["leader", "leader", "/"]
            }
        },
        {
            "keys": "f.o",
            "name": "+Find file in project",
            "type": "command",
            "command": "workbench.action.quickOpen"
        },
        {
            "keys": "p.o",
            "name": "+Switch project",
            "type": "command",
            "command": "workbench.action.openRecent"
        },
        {
            "keys": "p.p",
            "name": "+Switch project",
            "position": -1
        },
        {
            "keys": "p.l",
            "name": "+Switch project",
            "position": -1
        },
        {
            "keys": "p.n",
            "name": "+Open new project",
            "type": "command",
            "command": "workbench.action.files.openFolder"
        },
        {
            "keys": "f.N",
            "name": "New file",
            "type": "command",
            "command": "explorer.newFile"
        },
        {
            "keys": "f.n",
            "name": "New untitled file",
            "type": "command",
            "command": "workbench.action.files.newUntitledFile"
        },
        {
            "keys": "s.a",
            "name": "Search and Replace",
            "type": "command",
            "command": "vim-search-and-replace.start"
        },
        {
            "keys": "s.t",
            "name": "Show terminal",
            "type": "command",
            "command": "workbench.action.terminal.focus"
        },
        {
            "keys": "a",
            "name": "+Select Around",
            "type": "bindings",
            "bindings": [
                {
                    "key": "q",
                    "name": "String '",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "a", "'"]
                    }
                },
                {
                    "key": "Q",
                    "name": "String \"",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "a", "\""]
                    }
                },
                {
                    "key": "'",
                    "name": "String '",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "a", "'"]
                    }
                },
                {
                    "key": "\"",
                    "name": "String \"",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "a", "\""]
                    }
                },
                {
                    "key": "<a-w>",
                    "name": "WORD",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "a", "W"]
                    }
                },
                {
                    "key": "a",
                    "name": "Angle Brackets <>",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "a", "<"]
                    }
                },
                {
                    "key": "r",
                    "name": "Square Brackets []",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "a", "["]
                    }
                },
                {
                    "key": "B",
                    "name": "Curly Braces",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "a", "B"]
                    }
                },
                {
                    "key": "b",
                    "name": "Parentheses",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "a", "b"]
                    }
                },
                {
                    "key": "w",
                    "name": "Word",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "a", "w"]
                    }
                }
            ]
        },
        {
            "keys": "i",
            "name": "+Select Inside",
            "type": "bindings",
            "bindings": [
                {
                    "key": "q",
                    "name": "String '",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "i", "'"]
                    }
                },
                {
                    "key": "Q",
                    "name": "String \"",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "i", "\""]
                    }
                },
                {
                    "key": "'",
                    "name": "String '",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "i", "'"]
                    }
                },
                {
                    "key": "\"",
                    "name": "String \"",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "i", "\""]
                    }
                },
                {
                    "key": "<a-w>",
                    "name": "WORD",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "i", "W"]
                    }
                },
                {
                    "key": "a",
                    "name": "Angle Brackets <>",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "i", "<"]
                    }
                },
                {
                    "key": "r",
                    "name": "Square Brackets []",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "i", "["]
                    }
                },
                {
                    "key": "B",
                    "name": "Curly Braces",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "i", "B"]
                    }
                },
                {
                    "key": "b",
                    "name": "Parentheses",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "i", "b"]
                    }
                },
                {
                    "key": "w",
                    "name": "Word",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["v", "i", "w"]
                    }
                }
            ]
        },
        {
            "keys": "j",
            "name": "+Jump/Goto...",
            "type": "bindings",
            "bindings": [
                {
                    "key": "C",
                    "name": "Jump to previous change",
                    "type": "command",
                    "command": "workbench.action.editor.previousChange"
                },
                {
                    "key": "c",
                    "name": "Jump to next change",
                    "type": "command",
                    "command": "workbench.action.editor.nextChange"
                },
                {
                    "key": "g",
                    "name": "Go to line",
                    "type": "command",
                    "command": "workbench.action.gotoLine"
                },
                {
                    "key": "s",
                    "name": "Go to Symbol",
                    "type": "command",
                    "command": "workbench.action.gotoSymbol"
                },
                {
                    "key": "d",
                    "name": "Go to Definition",
                    "type": "command",
                    "command": "editor.action.revealDefinition"
                },
                {
                    "key": "D",
                    "name": "Go to Declaration",
                    "type": "command",
                    "command": "editor.action.revealDeclaration"
                },
                {
                    "key": "t",
                    "name": "Go to Type Definition",
                    "type": "command",
                    "command": "editor.action.goToTypeDefinition"
                },
                {
                    "key": "i",
                    "name": "Go to Implementations",
                    "type": "command",
                    "command": "editor.action.goToImplementation"
                },
                {
                    "key": "r",
                    "name": "Go to References",
                    "type": "command",
                    "command": "editor.action.goToReferences"
                },
                {
                    "key": "H",
                    "name": "Switch Header/Source",
                    "type": "command",
                    "command": "C_Cpp.SwitchHeaderSource"
                },
                {
                    "key": "h",
                    "name": "Show Hover",
                    "type": "command",
                    "command": "editor.action.showHover"
                },
                {
                    "key": "P",
                    "name": "+Aside",
                    "type": "bindings",
                    "bindings": [
                        {
                            "key": "d",
                            "name": "Go to Definition",
                            "type": "command",
                            "command": "editor.action.revealDefinitionAside"
                        },
                        {
                            "key": "D",
                            "name": "Go to Declaration",
                            "type": "command",
                            "command": "editor.action.openDeclarationToTheSide"
                        }
                    ]
                },
                {
                    "key": "p",
                    "name": "+Peek",
                    "type": "bindings",
                    "bindings": [
                        {
                            "key": "d",
                            "name": "Go to Definition",
                            "type": "command",
                            "command": "editor.action.peekDefinition"
                        },
                        {
                            "key": "D",
                            "name": "Go to Declaration",
                            "type": "command",
                            "command": "editor.action.peekDeclaration"
                        }
                    ]
                },
                {
                    "key": "j",
                    "name": "Jump to character",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["leader", "leader", "s"]
                    }
                },
                {
                    "key": "l",
                    "name": "Jump to line",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": [
                            "leader",
                            "leader",
                            "leader",
                            "b",
                            "d",
                            "j",
                            "k"
                        ]
                    }
                },
                {
                    "key": "w",
                    "name": "Jump to word",
                    "type": "command",
                    "command": "vim.remap",
                    "args": {
                        "after": ["leader", "leader", "leader", "b", "d", "w"]
                    }
                },
                {
                    "key": "v",
                    "name": "Jump to outline/variables",
                    "type": "command",
                    "command": "breadcrumbs.focusAndSelect"
                }
            ]
        }
    ],
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    }
}