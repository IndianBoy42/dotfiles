snippet `(\w+)\.\.e` "environment" A
\begin{``rv=m[1]``}
    $0
\end{``rv=m[1]``}
endsnippet
snippet \bf "bold face" A
\textbf{$0}
endsnippet
snippet sigma "sigma" Aw
\sigma
endsnippet
snippet phi "phi" Aw
\phi
endsnippet
snippet lambda "lambda" Aw
\lambda
endsnippet
snippet omega "omega" Aw
\omega
endsnippet
snippet delta "delta" Aw
\delta
endsnippet
snippet beta "beta" Aw
\beta
endsnippet
snippet alpha "alpha" Aw
\alpha
endsnippet
snippet psi "psi" Aw
\psi
endsnippet
snippet phi "phi" Aw
\phi
endsnippet
snippet theta "theta" Aw
\theta
endsnippet
snippet beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet \verb "verbatim" A
\verb!$0!
endsnippet

snippet \( "inline math" A
\( $0 \)
endsnippet
snippet $ "short inline math" A
$$0$
endsnippet

snippet () "parens" A
\left( $0 \right)
endsnippet
snippet [] "sq brackets" A
\left[ $0 \right]
endsnippet
snippet {} "curly brackets" A
\left\{ $0 \right\\}
endsnippet
snippet \| "norm" A
\left\| $0 \right\|
endsnippet

snippet mbb "" A
\mathbb{$0}
endsnippet
snippet mbf "" A
\mathbf{$0}
endsnippet

snippet \eq "display math" bA
\begin{equation}
    $0
\end{equation}
endsnippet

snippet \align "aligned math" bA
\begin{align}
    $0
\end{align}
endsnippet
snippet xyz&= "align equals" A
&= $0 \\\\
endsnippet
snippet \\ "newline" A
\\\\

endsnippet

snippet \psec "section" bA
\clearpage\section{$0}
endsnippet
snippet \sec "section" bA
\section{$0}
endsnippet

snippet \psub "subsection" bA
\clearpage\subsection{$0}
endsnippet
snippet \sub "subsection" bA
\subsection{$0}
endsnippet
snippet \pssub "subsubsection" bA
\clearpage\subsubsection{$0}
endsnippet
snippet \ssub "subsubsection" bA
\subsubsection{$0}
endsnippet

snippet \lis "itemize" bA
\begin{itemize}
    \item $0
\end{itemize}
endsnippet
snippet \enu "enumerate" bA
\begin{enumerate}
    \item $0
\end{enumerate}
endsnippet
snippet -- "item" bA
\item 
endsnippet

snippet insfig "insert a figure" bA

\begin{figure}[htb]
    \centering
    \includegraphics[width=0.8\linewidth]{$1}
    \caption{$2}
    \label{$3}
\end{figure}

endsnippet

snippet \algo Ab
\begin{algorithm} \DontPrintSemicolon \SetAlgoLined
    \caption{$${1:Function} \implies$}
    \KwResult{$${2:Result} \implies$}
    \KwIn{$${3:Input \implies}$}
    
    $0
\end{algorithm}
endsnippet
snippet `while;` Ab
\While{\$$1\$}{
    $0
}
endsnippet
snippet `while\s+(.+);` Ab
\While{\$``rv=m[1]``\$}{
    $0
}
endsnippet
snippet `for;` Ab
\For{$1}{
    $0
}
endsnippet
snippet `for\s+\((.+)\);` Ab
\For{$``rv=m[1]``$}{
    $0
}
endsnippet
snippet `for\s+(.+)\s+in\s+(.+);` Ab
\For{\$``rv=m[1]`` \gets ``rv=m[2]``\$}{
    $0
}
endsnippet
snippet `for\s+(.+)\s+from\s+(.+)\s+to\s+(.+);` Ab
\For{\$``rv=m[1]`` \gets ``rv=m[2]``\$ \KwTo \$``rv=m[3]``\$}{
    $0
}
endsnippet
snippet `for\s+(.+)\s+from\s+(.+)\s+til\s+(.+)\s+by\s+(.+);` Ab
\For{\$``rv=m[1]`` \gets ``rv=m[2]``\$ \KwTo \$``rv=m[3]``\$ \KwBy \$``rv=m[4]``\$}{
    $0
}
endsnippet
endsnippet
snippet `forto;` Ab
\For{\$i \gets $1$ \KwTo $$2$}{
    $0
}
endsnippet
snippet `if\s+(.+);` bA
\If{\$``rv=m[1]``\$}{
    $0
}
endsnippet
snippet `ifel\s+\((.+)\);` bA
\uIf{\$``rv=m[1]``\$}{
    $0
} \Else {
}
endsnippet
snippet `elif\s+\((.+)\);` bA
\ElseIf{\$``rv=m[1]``\$}{
    $0
}
endsnippet
snippet `elfife\s+\((.+)\);` bA
\uElseIf{\$``rv=m[1]``\$}{
    $0
} \Else {
}
endsnippet
snippet `return\s*(\w*);` Ab
\KwRet{\$``rv=m[1]``\$}\;
endsnippet
snippet `/\*` A
\tcc{$0}
endsnippet
snippet `//` A
\tcp*{$0}
endsnippet
snippet `let\s+(.+)\s*=\s*(.+);` Ab
\textbf{let} \$``rv=m[1]`` \gets ``rv=m[2]``\$ \;
endsnippet
snippet `(\w+.*)\s+(.)=\s*(.+);` Ab
\$``rv=m[1]`` \gets ``rv=m[1]`` ``rv=m[2]`` ``rv=m[3]``\$ \;
endsnippet
snippet `(\w+.*)\+\+;` Ab
\$``rv=m[1]`` \gets ``rv=m[1]`` + 1\$ \;
endsnippet
snippet `(\w+.*)\s+=\s+(.+);` Ab
\$``rv=m[1]`` \gets ``rv=m[2]``\$ \;
endsnippet
snippet `;;` A
\;

endsnippet