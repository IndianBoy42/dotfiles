snippet `(.*)\.\.conv` A
convert(${0:type}, ``rv=m[1]``)
endsnippet

snippet fn Ab
function ${1:name}($2)
    $0
end
endsnippet

snippet import A
Pkg.add(``rv='"$0"'``)
using $0
endsnippet

snippet useiters b
using IterTools
using Base.Iterators
endsnippet
snippet inc A
include(``rv='"$0"'``)
endsnippet

snippet """ Ab
``
rv = '"""\n\t$0\n"""'
``
endsnippet
snippet if Ab
if $0

end
endsnippet
snippet `else\s*if` Ab
elseif $0
endsnippet
snippet for Ab
for ${1:i} in ${2:range}
    $0
end
endsnippet
snippet let A
let $1 = $0
    $1
end
endsnippet
snippet beg A
begin
$0
end
endsnippet
snippet `module\s*(\w*)\s*\{\}` A
module ${1:``rv=m[1]``}

$0

end # $1
endsnippet

snippet <- A
←
endsnippet
snippet -> A
→
endsnippet